@model WebApplication1.Models.Order

@{
    ViewBag.Title = "新增訂單";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>InsertOrder</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm("InsertOrder", "Order")) 
    {
        @Html.AntiForgeryToken()
        
            <h4>新增訂單</h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <table class="table">
            <tr>
                <td>@Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.DropDownList("CustId")
                    @*@Html.DropDownListFor(model => model.CustId,(IEnumerable<SelectListItem>)ViewBag.custData)*@
                </td>
            </tr>
    
            <tr>
                <td>@Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.DropDownList("EmpId")
                    @*@Html.DropDownListFor(model => model.EmpId,(IEnumerable<SelectListItem>)ViewBag.empData)*@
                </td>
            </tr>



            <tr>
                    <td>@Html.LabelFor(model => model.Orderdate, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.Orderdate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.Orderdate, "", new { @class = "text-danger" })
                    </td>
                
                    <td>@Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.RequiredDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
                    </td>
                
            </tr>

            <tr>
                <td>@Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShippedDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                    <td>@Html.LabelFor(model => model.ShipperName, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.DropDownList("ShipperId")


                @*@Html.DropDownListFor(model => model.ShipperId, (IEnumerable<SelectListItem>)ViewBag.shipperData)*@
                    </td>

            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Freight, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control", @type = "number" , @value = "10"} })
                    @Html.ValidationMessageFor(model => model.Freight, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control", @type = "text" , @value = "10"} })
                    @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control", @type = "text", @value = "10" } })
                    @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipRegion, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control", @type = "text" , @value = "10"} })
                    @Html.ValidationMessageFor(model => model.ShipRegion, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control", @type = "text", @value = "10" } })
                    @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control", @type = "text" , @value = "10"} })
                    @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
                </td>
                <td>@Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control", @type = "text", @value = "10" } })
                    @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                </td>
            </tr>


           
        </table>
                    <input type="submit" value="新增" class="btn btn-primary" />
    }

</body>
</html>
